#ifndef WINDOWS_EVENTS_GUARD
#define WINDOWS_EVENTS_GUARD

#include "Core/Input/KeyboardEvents.hpp"
#include "Core/Input/MouseEvents.hpp"

#include <unordered_map>
//#include <Windows.h>
#include <WinUser.h>

namespace SyrfusGameEngine
{
	namespace WindowsLookupTables
	{
		std::unordered_map<uint32_t, KeyCode> s_KeyCode = {
			{ VK_BACK,			KeyCode::BACKSPACE },
			{ VK_TAB,			KeyCode::TAB },
			{ VK_CLEAR,			KeyCode::CLEAR },
			{ VK_RETURN,		KeyCode::ENTER },
			{ VK_SHIFT,			KeyCode::LEFT_SHIFT },
			{ VK_CONTROL,		KeyCode::LEFT_CONTROL },
			{ VK_MENU,			KeyCode::LEFT_ALT },
			{ VK_PAUSE,			KeyCode::PAUSE },
			{ VK_CAPITAL,		KeyCode::CAPS_LOCK },
			{ VK_ESCAPE,		KeyCode::ESCAPE },
			{ VK_SPACE,			KeyCode::SPACE },
			{ VK_PRIOR,			KeyCode::PAGE_UP },
			{ VK_NEXT,			KeyCode::PAGE_DOWN },
			{ VK_END,			KeyCode::END },
			{ VK_HOME,			KeyCode::HOME },
			{ VK_LEFT,			KeyCode::LEFT },
			{ VK_UP,			KeyCode::UP },
			{ VK_RIGHT,			KeyCode::RIGHT },
			{ VK_DOWN,			KeyCode::DOWN },
			{ VK_SNAPSHOT,		KeyCode::PRINT_SCREEN },
			{ VK_INSERT,		KeyCode::INSERT },
			{ VK_DELETE,		KeyCode::DEL },
			{ 0x30,				KeyCode::KEY_0 },
			{ 0x31,				KeyCode::KEY_1 },
			{ 0x32,				KeyCode::KEY_2 },
			{ 0x33,				KeyCode::KEY_3 },
			{ 0x34,				KeyCode::KEY_4 },
			{ 0x35,				KeyCode::KEY_5 },
			{ 0x36,				KeyCode::KEY_6 },
			{ 0x37,				KeyCode::KEY_7 },
			{ 0x38,				KeyCode::KEY_8 },
			{ 0x39,				KeyCode::KEY_9 },
			{ 0x41,				KeyCode::A },
			{ 0x42,				KeyCode::B },
			{ 0x43,				KeyCode::C },
			{ 0x44,				KeyCode::D },
			{ 0x45,				KeyCode::E },
			{ 0x46,				KeyCode::F },
			{ 0x47,				KeyCode::G },
			{ 0x48,				KeyCode::H },
			{ 0x49,				KeyCode::I },
			{ 0x4A,				KeyCode::J },
			{ 0x4B,				KeyCode::K },
			{ 0x4C,				KeyCode::L },
			{ 0x4D,				KeyCode::M },
			{ 0x4E,				KeyCode::N },
			{ 0x4F,				KeyCode::O },
			{ 0x50,				KeyCode::P },
			{ 0x51,				KeyCode::Q },
			{ 0x52,				KeyCode::R },
			{ 0x53,				KeyCode::S },
			{ 0x54,				KeyCode::T },
			{ 0x55,				KeyCode::U },
			{ 0x56,				KeyCode::V },
			{ 0x57,				KeyCode::W },
			{ 0x58,				KeyCode::X },
			{ 0x59,				KeyCode::Y },
			{ 0x5A,				KeyCode::Z },
			{ VK_OEM_7,			KeyCode::APOSTROPHE },
			{ VK_OEM_COMMA,		KeyCode::COMMA },
			{ VK_OEM_MINUS,		KeyCode::MINUS },
			{ VK_OEM_PERIOD,	KeyCode::PERIOD },
			{ VK_OEM_2,			KeyCode::SLASH },
			{ VK_OEM_1,			KeyCode::SEMICOLON },
			{ VK_OEM_PLUS,		KeyCode::EQUAL },
			{ VK_OEM_4,			KeyCode::LEFT_BRACKET },
			{ VK_OEM_5,			KeyCode::BACKSLASH },
			{ VK_OEM_6,			KeyCode::RIGHT_BRACKET },
			{ VK_OEM_3,			KeyCode::GRAVE_ACCENT },
			{ VK_LWIN,			KeyCode::LEFT_SUPER },
			{ VK_RWIN,			KeyCode::RIGHT_SUPER },
			{ VK_APPS,			KeyCode::MENU },
			{ VK_NUMPAD0,		KeyCode::KP_0 },
			{ VK_NUMPAD1,		KeyCode::KP_1 },
			{ VK_NUMPAD2,		KeyCode::KP_2 },
			{ VK_NUMPAD3,		KeyCode::KP_3 },
			{ VK_NUMPAD4,		KeyCode::KP_4 },
			{ VK_NUMPAD5,		KeyCode::KP_5 },
			{ VK_NUMPAD6,		KeyCode::KP_6 },
			{ VK_NUMPAD7,		KeyCode::KP_7 },
			{ VK_NUMPAD8,		KeyCode::KP_8 },
			{ VK_NUMPAD9,		KeyCode::KP_9 },
			{ VK_MULTIPLY,		KeyCode::KP_MULTIPLY },
			{ VK_ADD,			KeyCode::KP_ADD },
			{ VK_SUBTRACT,		KeyCode::KP_SUBTRACT },
			{ VK_DECIMAL,		KeyCode::KP_DECIMAL },
			{ VK_DIVIDE,		KeyCode::KP_DIVIDE },
			{ VK_F1,			KeyCode::F1 },
			{ VK_F2,			KeyCode::F2 },
			{ VK_F3,			KeyCode::F3 },
			{ VK_F4,			KeyCode::F4 },
			{ VK_F5,			KeyCode::F5 },
			{ VK_F6,			KeyCode::F6 },
			{ VK_F7,			KeyCode::F7 },
			{ VK_F8,			KeyCode::F8 },
			{ VK_F9,			KeyCode::F9 },
			{ VK_F10,			KeyCode::F10 },
			{ VK_F11,			KeyCode::F11 },
			{ VK_F12,			KeyCode::F12 },
			{ VK_F13,			KeyCode::F13 },
			{ VK_F14,			KeyCode::F14 },
			{ VK_F15,			KeyCode::F15 },
			{ VK_F16,			KeyCode::F16 },
			{ VK_F17,			KeyCode::F17 },
			{ VK_F18,			KeyCode::F18 },
			{ VK_F19,			KeyCode::F19 },
			{ VK_F20,			KeyCode::F20 },
			{ VK_F21,			KeyCode::F21 },
			{ VK_F22,			KeyCode::F22 },
			{ VK_F23,			KeyCode::F23 },
			{ VK_F24,			KeyCode::F24 },
			{ VK_NUMLOCK,		KeyCode::NUM_LOCK },
			{ VK_SCROLL,		KeyCode::SCROLL_LOCK },
			{ VK_LSHIFT,		KeyCode::LEFT_SHIFT },
			{ VK_RSHIFT,		KeyCode::RIGHT_SHIFT },
			{ VK_LCONTROL,		KeyCode::LEFT_CONTROL },
			{ VK_RCONTROL,		KeyCode::RIGHT_CONTROL },
			{ VK_LMENU,			KeyCode::LEFT_ALT },
			{ VK_RMENU,			KeyCode::RIGHT_ALT }
		};

		static std::unordered_map<uint32_t, MouseCode> s_MouseCode
		{
			{ VK_LBUTTON,		MouseCode::BUTTON_1 },
			{ VK_RBUTTON,		MouseCode::BUTTON_2 },
			{ VK_CANCEL,		MouseCode::CONTROL_BREAK },
			{ VK_MBUTTON,		MouseCode::BUTTON_3 },
			{ VK_XBUTTON1,		MouseCode::BUTTON_4 },
			{ VK_XBUTTON2,		MouseCode::BUTTON_5 }
		};
	};
}

#endif